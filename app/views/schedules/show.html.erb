<% content_for 'head' do %>
	<%= chartr_includes %>
<% end %>

<h2>Schedule <%= @schedule.name %>: 24-hr Stats</h2>

<div id="disk_linechart" style="width:600px;height:300px;">
</div>

<p><button id="reset-btn">Reset</button></p>

<script type="text/javascript">
	/**
	 * Wait till dom's finished loading.
	 */
	document.observe('dom:loaded', function(){
		/**
		 * Fill series d1.
		 */
	
		/**
		 * Global options object.
		 */
		var options = <%= @disk.options.to_json %>;
	
		/**
		 * Function displays a graph in the 'container' element, extending
		 * the global options object with the optionally passed options.
		 */
		function drawGraph(opts){
			/**
			 * Clone the options, so the 'options' variable always keeps intact.
			 */
			var o = Object.extend(Object.clone(options), opts || {});
			/**
			 * Return a new graph.
			 */
			return Flotr.draw(
				$('disk_linechart'), 
				<%= @disk.data.to_json %>,
				o
			);
		}	
	
		/**
		 * Actually draw the graph.
		 */
		var f = drawGraph();			
	
		/**
		 * Hook into the 'flotr:select' event.
		 */
		$('disk_linechart').observe('flotr:select', function(evt){
			/**
			 * Get the selected area coordinates passed as event memo.
			 */
			var area = evt.memo[0];
		
			/**
			 * What happens: empty the container element, and draw a new 
			 * graph with bounded axis. The axis correspond to the selection
			 * you just made.
			 */
			f = drawGraph({
				xaxis: {min:area.x1, max:area.x2, mode:'time', labelsAngle:45},
				yaxis: {min:area.y1, max:area.y2}
			});
		});
	
		/**
		 * Observe click event on the reset-btn. Reset the graph when clicked.
		 * The drawGraph function wrapped in another function otherwise it get's 
		 * an Event object passed as first argument, while it expects an options
		 * object.
		 */
		$('reset-btn').observe('click', function(){drawGraph()});
	});			
</script>


